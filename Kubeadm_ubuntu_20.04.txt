##plese run the bellow commands on master and worker nodes

sudo -i

sudo apt-get update

sudo swapoff -a
vi /etc/fstab #this command use for disable swap by comment "#"

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

sudo sysctl --system

sudo tee /etc/modules-load.d/containerd.conf << EOF
overlay
br_netfilter
EOF

sudo sysctl --system

sudo apt install curl gnupg2 software-properties-common apt-transport-https ca-certificates -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update
sudo apt install containerd.io -y
mkdir -p /etc/containerd
containerd config default>/etc/containerd/config.toml
systemctl restart containerd
systemctl enable containerd
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo systemctl enable kubelet && sudo systemctl start kubelet
sudo apt-mark hold kubelet kubeadm kubectl

##Run Only MASTER NODE ###
kubeadm init --pod-network-cidr=10.244.0.0/16

# read and run the output command 


kubeadm join 10.0.3.15:6443 --token rol7ri.oewz5t6a31bhjgp7 --discovery-token-ca-cert-hash sha256:f47ad730ba399ffbed79fd8f944bd8b101be638865d00e3d22c2d7240463464f

# Finally, install a network plugin to enable pod-to-pod communication in the cluster. For example, you can use Flannel by running the following command on the master node:

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
					OR
kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/tigera-operator.yaml

## If everythig is working fine then do some hands on with cluster

## if you are running VM on vertual box then you need to run bellow commands for setting the permanent IP on VM's 

vi /etc/network/interfaces

iface enp0s3 inet static
        address 192.168.29.xx
        netmask 255.255.255.0
        gateway 192.168.29.1

vi /etc/hosts

127.0.0.1 localhost
127.0.1.1 master-node
10.0.2.x     master-node
10.0.2.x     worker-node

